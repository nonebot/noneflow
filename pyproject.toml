[project]
name = "noneflow"
version = "4.2.6"
description = "Manage publish related issues in nonebot2 project"
authors = [{ name = "uy_sun", email = "hmy0119@gmail.com" }]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">= 3.12"
dependencies = [
  "click>=8.1.8",
  "docker>=7.1.0",
  "githubkit>=0.12.5",
  "jinja2>=3.1.5",
  "nonebot-adapter-github>=0.5.0",
  "nonebot2>=2.4.1",
  "pydantic-extra-types>=2.10.2",
  "pyjson5>=1.6.8",
  "tzdata>=2025.1",
]

[project.urls]
Homepage = "https://github.com/nonebot/noneflow"
Repository = "https://github.com/nonebot/noneflow.git"
Issues = "https://github.com/nonebot/noneflow/issues"
Changelog = "https://github.com/nonebot/noneflow/blob/main/CHANGELOG.md"

[tool.uv]
dev-dependencies = [
  "bump-my-version>=1.0.1",
  "inline-snapshot>=0.19.3",
  "nonebug>=0.4.3",
  "poethepoet>=0.32.1",
  "pytest-asyncio>=0.25.2",
  "pytest-cov>=6.0.0",
  "pytest-mock>=3.14.0",
  "pytest-xdist>=3.6.1",
  "respx>=0.22.0",
]

[tool.uv.pip]
universal = true

[tool.poe.tasks]
test = "pytest --cov=src --cov-report xml --junitxml=./junit.xml -n auto"
bump = "bump-my-version bump"
show-bump = "bump-my-version show-bump"
snapshot-create = "pytest --inline-snapshot=create"
snapshot-fix = "pytest --inline-snapshot=fix"
store-test = "python -m src.providers.store_test"
docker-test = "python -m src.providers.docker_test"

[tool.pyright]
pythonVersion = "3.13"
pythonPlatform = "All"
typeCheckingMode = "standard"

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
  "F",     # pyflakes
  "W",     # pycodestyle warnings
  "E",     # pycodestyle errors
  "UP",    # pyupgrade
  "ASYNC", # flake8-async
  "C4",    # flake8-comprehensions
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "TC",    # flake8-type-checking
  "DTZ",   # flake8-datetimez
  "RUF",   # Ruff-specific rules
  "I",     # isort
]
ignore = [
  "E402",     # module-import-not-at-top-of-file
  "E501",     # line-too-long
  "RUF001",   # ambiguous-unicode-character-string
  "RUF002",   # ambiguous-unicode-character-docstring
  "RUF003",   # ambiguous-unicode-character-comment
  "ASYNC230", # blocking-open-call-in-async-function
]

[tool.ruff.lint.isort]
known-third-party = ["docker"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:", "raise NotImplementedError"]

[tool.coverage.run]
omit = ["*.jinja"]

[tool.nonebot]
adapters = [{ name = "GitHub", module_name = "nonebot.adapters.github" }]
plugin_dirs = ["src/plugins"]

[tool.bumpversion]
current_version = "4.2.6"
commit = true
message = "chore(release): {new_version}"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "## [Unreleased]"
replace = "## [Unreleased]\n\n## [{new_version}] - {now:%Y-%m-%d}"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
regex = true
search = "\\[Unreleased\\]: (https://.+?)v{current_version}\\.\\.\\.HEAD"
replace = "[Unreleased]: \\1v{new_version}...HEAD\n[{new_version}]: \\1v{current_version}...v{new_version}"

[[tool.bumpversion.files]]
filename = "uv.lock"
search = "name = \"noneflow\"\nversion = \"{current_version}\""
replace = "name = \"noneflow\"\nversion = \"{new_version}\""
